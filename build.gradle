// Inserting plugin into Gradle Builder
plugins {
	id 'org.springframework.boot' version '2.4.3'       //Spring Boot Plugin
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'  //Java Jar dependency management
	id 'java'  //Java plugin to execute Java Byte Code
}

group = 'com.cg.onlineshopping'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'  // Java Compilation

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()   // Source of the jars to download
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  //Inserting dependency all time
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' //Templating engine
	implementation 'org.springframework.boot:spring-boot-starter-web' //used to create url's
	implementation 'org.springframework.boot:spring-boot-starter-validation'//Validation Starter dependency
	compileOnly 'org.projectlombok:lombok'   // To generate Getters and Setters at compile time
	developmentOnly 'org.springframework.boot:spring-boot-devtools' //Monitor the code //restart the server
	runtimeOnly 'org.postgresql:postgresql'  // Only at runtime dependency injection
	annotationProcessor 'org.projectlombok:lombok'  // Completely based upon annotation
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile "io.springfox:springfox-bean-validators:2.9.2"
	testImplementation 'org.springframework.boot:spring-boot-starter-test' //junit //test our application
	//compile 'log4j:log4j:1.2.17'
	// https://mvnrepository.com/artifact/log4j/log4j
	implementation group: 'log4j', name: 'log4j', version: '1.2.17'	
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2' //used for documentation
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'//user interface for swagger
	
	/*compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile "io.springfox:springfox-bean-validators:2.9.2"*/
	
}

test {
	useJUnitPlatform()  // Selecting platform to test
}
